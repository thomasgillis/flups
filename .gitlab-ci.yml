default :
  image : immc/flups-valid:v0.2

stages:
  - build
  - test

compil dbg :
  stage: build
  artifacts: 
    paths: 
      - flups_validation
    when: on_success
  script:
    - echo "include make_arch/make.docker_valid_dbg" > Makefile.valid
    - tail -n +5 Makefile >> Makefile.valid
    - make -j4 -f Makefile.valid

compil opt :
  stage: build
  artifacts: 
    paths: 
      - flups_validation
    when: on_success
  script:
    - echo "include make_arch/make.docker_valid_opt" > Makefile.valid
    - tail -n +5 Makefile >> Makefile.valid
    - make -j4 -f Makefile.valid

#checks that the code runs without error in serial dbg
run serial 1:1:
  stage: test
  script:
    - ./flups_validation -bc 3 3 3 3 3 3 -res 8
    - cp data/validation_3d_333333_typeGreen\=0.txt data/validation_3d_444444_typeGreen\=0.txt
    - python3.7 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_444444_typeGreen=0.txt'))"
    # - ./flups_validation -bc 3 3 3 3 3 3
    # - python3.7 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_333333_typeGreen=0.txt'))"
  dependencies: 
    - compil dbg

run serial 2:1:
  stage: test
  script:
    - ./flups_validation -bc 0 1 4 4 1 1
    - python3.7 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_014411_typeGreen=0.txt'))"
    - cat ./data/validation_3d_014411_typeGreen\=0.txt
  dependencies: 
    - compil dbg

#validation all types of BCs with 1 kernel
validate3D all BCs:
  stage: test
  script:
    - python3.7 ./scripts/test_3D_bcs.py
  dependencies: 
    - compil opt

# converge3D all kernels :
#   stage: test
#   script:
#     - python3.7 ./scripts/test_3D_kerns.py
#   dependencies: 
#     - compil opt