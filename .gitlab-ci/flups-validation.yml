################################################################################
# VALIDATION
################################################################################
variables:
  VALIDATION_MERGE_REQUEST: "yes"  # "yes" or "no" - boolean if yes, the stage validation will be executed for a merge request event 
  VALIDATION_PUSH_MAIN: "yes"      # "yes" or "no" - boolean if yes, the stage validation will be executed for a push on the main branch
  VALIDATION_FAILEDJOB: "yes"      # "yes" or "no" - boolean if yes, the stage validation will be executed for a push on a branch name which math /^[0-9]-job-failed.*$/i
  VALIDATION_BRANCH: "no"          # "yes" or "no" - boolean if yes, the stage validation will be executed for a push on the main branch on any branch  
  

#validation all types of BCs with 1 kernel (serial)
validate3D all BCs Centered:
  stage: validation
  rules:
    - if: ($VALIDATION_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VALIDATION_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VALIDATION_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VALIDATION_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil opt]  
  dependencies: 
    - compil opt
  script:
    - cd ./samples/validation/
    - export OMP_NUM_THREADS=1
    - python3.7 ./scripts/test_3D_bcs.py 0
  
validate3D all BCs Cell Centered:
  stage: validation
  rules:
    - if: ($VALIDATION_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VALIDATION_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VALIDATION_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VALIDATION_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil opt]  
  dependencies: 
    - compil opt
  script:
    - cd ./samples/validation/
    - export OMP_NUM_THREADS=1
    - python3.7 ./scripts/test_3D_bcs.py 1

# #validation convergence in unbounded for all kernels (parallel)
validate3D all kernels Node Centered:
  stage: validation
  rules:
    - if: ($VALIDATION_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VALIDATION_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VALIDATION_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VALIDATION_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil opt]  
  dependencies: 
    - compil opt
  script:
    - cd ./samples/validation/
    - echo $OMP_NUM_THREADS
    - python3.7 ./scripts/test_3D_kerns.py 0 
  

validate3D all kernels Cell Centered:
  stage: validation
  rules:
    - if: ($VALIDATION_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VALIDATION_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VALIDATION_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VALIDATION_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil opt]  
  dependencies: 
    - compil opt
  script:
    - cd ./samples/validation/
    - echo $OMP_NUM_THREADS
    - python3.7 ./scripts/test_3D_kerns.py 1
