variables:
  TEST_MERGE_REQUEST: "yes"  # "yes" or "no" - boolean if yes, the stage test will be executed for a merge request event 
  TEST_PUSH_MAIN: "yes"      # "yes" or "no" - boolean if yes, the stage test will be executed for a push on the main branch
  TEST_FAILEDJOB: "yes"      # "yes" or "no" - boolean if yes, the stage validation will be executed for a push on a branch name which math /^[0-9]-job-failed.*$/i
  TEST_BRANCH: "no"          # "yes" or "no" - boolean if yes, the stage test will be executed for a push on the main branch on any branch  


#checks that the code runs without error in serial dbg
################################################################################
# ALL TO ALL
################################################################################
run serial a2a 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - ./flups_validation_a2a --bc=3,3,3,3,3,3
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_333333_typeGreen=0.txt'))"
  


run serial a2a 2:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_a2a --bc=0,1,4,4,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_014411_typeGreen=0.txt'))"
  

run serial a2a 3:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_a2a --bc=3,3,1,4,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_331411_typeGreen=0.txt'))"
  

run serial a2a 4:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_a2a --bc=3,3,0,0,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_330011_typeGreen=0.txt'))"
  


#checks that the code runs without error in MPI dbg
run MPI a2a 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_a2a --np=2,2,1 --res=32,32,32 --bc=4,1,1,4,4,4
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_411444_typeGreen=0.txt'))"
  

run MPI a2a 2:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_a2a --np=2,2,1 --res=32,32,32 --bc=4,1,1,4,4,4 --kernel=2 
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_411444_typeGreen=2.txt'))"
  

run MPI a2a 3:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_a2a --np=2,2,1 --res=32,32,32  --bc=3,3,1,4,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_331411_typeGreen=0.txt'))"
  

run MPI a2a 4:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_a2a --np=2,2,1 --res=32,32,32  --bc=4,1,1,4,3,3
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_411433_typeGreen=0.txt'))"
    

run MPI a2a 5:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_a2a --np=2,2,1 --res=17,17,17  --bc=4,4,3,3,1,0
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_443310_typeGreen=0.txt'))"
  
    
run MPI a2a 6:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_a2a --np=1,3,1 --res=17,17,17  --bc=1,1,4,1,1,1 
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_114111_typeGreen=0.txt'))"
  

#checks that the code runs without error in MPI-OMP dbg
run MPI-OMP a2a 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - export OMP_NUM_THREADS=2
    - echo $OMP_NUM_THREADS
    - mpirun -np 2 ./flups_validation_a2a --np=1,2,1 --res=32,32,32  --bc=4,1,4,4,3,3
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_414433_typeGreen=0.txt'))"

run comm a2a 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil comm]
  dependencies: 
    - compil comm
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_a2a --np=2,2,1 --res=17,17,17  --bc=3,3,4,1,1,1 
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_334111_typeGreen=0.txt'))"


run comm a2a 2:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil comm]
  dependencies:
    - compil comm
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_a2a --np=1,3,1 --res=17,17,17  --bc=3,3,4,1,1,1 
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_334111_typeGreen=0.txt'))"

run 2d 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_a2a --np=1,3,1 --res=17,17,1 --dom=1,1,0  --bc=0,4,4,1,9,9 --kernel=1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_044199_typeGreen=1.txt'))"

run 2d 2:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_nb --np=1,3,1 --res=17,17,1 --dom=1,1,0  --bc=4,4,3,3,9,9 --kernel=3
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_443399_typeGreen=3.txt'))"


run 2d 3:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCHs
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_nb --np=1,3,1 --res=17,17,1 --dom=1,1,0  --bc=1,0,4,1,9,9 --kernel=0
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_104199_typeGreen=0.txt'))"
    

run 2d 4:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_a2a --np=1,3,1 --res=17,17,1 --dom=1,1,0  --bc=3,3,3,3,9,9 --kernel=1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_333399_typeGreen=1.txt'))"


# run metis:
#   stage: test
#   rules:
#     - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
#     - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
#     - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
#     - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
#     - if: $CI_COMMIT_BRANCH == "metis"
#   needs: [compil metis]
#   dependencies: 
#     - compil metis
#   script:
#     - cd ./samples/validation/
#     - mkdir prof
#     - mpirun --mca btl_vader_single_copy_mechanism none -np 4 ./flups_validation_a2a --np=2,1,2 --res=16,16,16  --bc=4,4,4,4,4,4 
#     - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_444444_typeGreen=0.txt'))"
#     - mpirun --mca btl_vader_single_copy_mechanism none -np 4 ./flups_validation_nb --np=2,2,1 --res=17,17,17  --bc=3,3,4,1,1,1 
#     - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_334111_typeGreen=0.txt'))"

################################################################################
# NON BLOCKING
################################################################################
run serial nb 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_nb  --bc=3,3,3,3,3,3
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_333333_typeGreen=0.txt'))"



run serial nb 2:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_nb  --bc=0,1,4,4,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_014411_typeGreen=0.txt'))"


run serial nb 3:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_nb  --bc=3,3,1,4,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_331411_typeGreen=0.txt'))"
  

run serial nb 4:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_nb  --bc=3,3,0,0,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_330011_typeGreen=0.txt'))"
  


#checks that the code runs without error in MPI dbg
run MPI nb 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_nb --np=2,2,1 --res=32,32,32  --bc=4,1,1,4,4,4
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_411444_typeGreen=0.txt'))"
  

run MPI nb 2:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_nb --np=2,2,1 --res=32,32,32  --bc=4,1,1,4,4,4 --kernel=2
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_411444_typeGreen=2.txt'))"
  

run MPI nb 3:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_nb --np=2,2,1 --res=32,32,32  --bc=3,3,1,4,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_331411_typeGreen=0.txt'))"
  

run MPI nb 4:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_nb --np=2,2,1 --res=32,32,32 --bc=4,1,1,4,3,3
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_411433_typeGreen=0.txt'))"
    

run MPI nb 5:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_nb --np=2,2,1 --res=17,17,17 --bc=4,4,3,3,1,0
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_443310_typeGreen=0.txt'))"
  
    
run MPI nb 6:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_nb --np=1,3,1 --res=17,17,17 --bc=1,1,4,1,1,1 
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_114111_typeGreen=0.txt'))"
  

#checks that the code runs without error in MPI-OMP dbg
run MPI-OMP nb 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - export OMP_NUM_THREADS=2
    - echo $OMP_NUM_THREADS
    - mpirun -np 2 ./flups_validation_nb --np=1,2,1 --res=32,32,32 --bc=4,1,4,4,3,3
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_414433_typeGreen=0.txt'))"

run comm nb 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil comm]
  dependencies: 
    - compil comm  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_nb --np=2,2,1 --res=17,17,17 --bc=3,3,4,1,1,1 
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_334111_typeGreen=0.txt'))"

run comm nb 2:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil comm]
  dependencies: 
    - compil comm  
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_nb --np=1,3,1 --res=17,17,17 --bc=3,3,4,1,1,1 
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_334111_typeGreen=0.txt'))"


# run serial google_test:
#   stage: test
#   rules:
#     - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
#     - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
#     - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
#     - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
#   needs: [compil google_test]
#   script:
#     - cd ./test/
#     - ./flups_test_a2a --gtest_filter=CellCentered/CellConvergenceTest.AllBoundaryConditions/0 --gtest_output="xml:report.xml"
  
#   artifacts:
#     reports:
#       junit: ./test/report.xml
#     when: always
  
#   dependencies:
#     - compil google_test


################################################################################
# NON BLOCKING - MPI_DataType
################################################################################
run serial isr 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_isr  --bc=3,3,3,3,3,3
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_333333_typeGreen=0.txt'))"



run serial isr 2:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_isr  --bc=0,1,4,4,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_014411_typeGreen=0.txt'))"


run serial isr 3:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_isr  --bc=3,3,1,4,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_331411_typeGreen=0.txt'))"
  

run serial isr 4:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - ./flups_validation_isr  --bc=3,3,0,0,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_330011_typeGreen=0.txt'))"
  


#checks that the code runs without error in MPI dbg
run MPI isr 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_isr --np=2,2,1 --res=32,32,32  --bc=4,1,1,4,4,4
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_411444_typeGreen=0.txt'))"
  

run MPI isr 2:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_isr --np=2,2,1 --res=32,32,32  --bc=4,1,1,4,4,4 --kernel=2
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_411444_typeGreen=2.txt'))"
  

run MPI isr 3:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_isr --np=2,2,1 --res=32,32,32  --bc=3,3,1,4,1,1
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_331411_typeGreen=0.txt'))"
  

run MPI isr 4:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_isr --np=2,2,1 --res=32,32,32 --bc=4,1,1,4,3,3
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_411433_typeGreen=0.txt'))"
    

run MPI isr 5:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_isr --np=2,2,1 --res=17,17,17 --bc=4,4,3,3,1,0
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_443310_typeGreen=0.txt'))"
  
    
run MPI isr 6:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_isr --np=1,3,1 --res=17,17,17 --bc=1,1,4,1,1,1 
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_114111_typeGreen=0.txt'))"
  

#checks that the code runs without error in MPI-OMP dbg
run MPI-OMP isr 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg  
  script:
    - cd ./samples/validation/
    - export OMP_NUM_THREADS=2
    - echo $OMP_NUM_THREADS
    - mpirun -np 2 ./flups_validation_isr --np=1,2,1 --res=32,32,32 --bc=4,1,4,4,3,3
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_414433_typeGreen=0.txt'))"

run comm isr 1:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil comm]
  dependencies: 
    - compil comm  
  script:
    - cd ./samples/validation/
    - mpirun -np 4 ./flups_validation_isr --np=2,2,1 --res=17,17,17 --bc=3,3,4,1,1,1 
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_334111_typeGreen=0.txt'))"

run comm isr 2:1:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil comm]
  dependencies: 
    - compil comm  
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_isr --np=1,3,1 --res=17,17,17 --bc=3,3,4,1,1,1 
    - python3.8 -c "from scripts import check_res; exit(check_res.check_res(1,'validation_3d_CellCenter_334111_typeGreen=0.txt'))"




################################################################################
#checks that the postprocessing of the plan works properly
################################################################################

run plan postprocessing:
  stage: test
  rules:
    - if: ($TEST_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($TEST_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($TEST_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($TEST_BRANCH == "yes") && $CI_COMMIT_BRANCH
  artifacts: 
    paths: 
      - report_test_plan_postprocessing.xml
    reports:
        junit: 
          - report_test_plan_postprocessing.xml
    when: always
  needs: [compil gtest]
  dependencies: 
    - compil gtest  
  script:
    - cd ./test/
    - mpirun -np 8 --oversubscribe ./flups_test_a2a --gtest_filter=PostPro* --gtest_output=xml:report_test_plan_postprocessing.xml
    - cd -; mv ./test/report_test_plan_postprocessing.xml .   