variables:
  VECTOR_MERGE_REQUEST: "yes"  # "yes" or "no" - boolean if yes, the stage test will be executed for a merge request event 
  VECTOR_PUSH_MAIN: "yes"      # "yes" or "no" - boolean if yes, the stage test will be executed for a push on the main branch
  VECTOR_FAILEDJOB: "yes"      # "yes" or "no" - boolean if yes, the stage validation will be executed for a push on a branch name which math /^[0-9]-job-failed.*$/i
  VECTOR_BRANCH: "no"          # "yes" or "no" - boolean if yes, the stage test will be executed for a push on the main branch on any branch  

####################################################
#   ALL TO ALL 
####################################################
run vector a2a 1:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_a2a --np=1,3,1 --res=17,17,17 --bc=1,1,4,1,1,1 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_114111_typeGreen=0.txt','validation_3d_CellCenter_114111_typeGreen=0.txt','validation_3d_CellCenter_114111_typeGreen=0.txt','validation_3d_CellCenter_114111_typeGreen=0.txt'))"
  

run vector a2a 2:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_a2a --np=1,3,1 --res=17,17,17 --bc=3,3,4,1,4,4 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_334144_typeGreen=0.txt','validation_3d_CellCenter_334144_typeGreen=0.txt','validation_3d_CellCenter_334144_typeGreen=0.txt','validation_3d_CellCenter_334144_typeGreen=0.txt'))"

run vector a2a 3:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_a2a --np=1,3,1 --res=17,17,17 --bcv=4,4,1,4,0,0,4,4,0,4,1,1,4,4,1,4,1,1 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_441400_typeGreen=0.txt','validation_3d_CellCenter_441400_typeGreen=0.txt','validation_3d_CellCenter_440411_typeGreen=0.txt','validation_3d_CellCenter_441411_typeGreen=0.txt'))"
  

run vector a2a 4:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_a2a --np=1,3,1 --res=17,17,17 --bcv=3,3,1,4,0,0,3,3,0,4,0,0,3,3,1,4,1,1 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_331400_typeGreen=0.txt','validation_3d_CellCenter_331400_typeGreen=0.txt','validation_3d_CellCenter_330400_typeGreen=0.txt','validation_3d_CellCenter_331411_typeGreen=0.txt'))"
  

run vector a2a 5:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil vortex_rot]
  dependencies: 
    - compil vortex_rot
  script:
    - cd ./samples/solve_vtube
    - python3.8 ./scripts/test_rot_a2a.py


###################################################
#  NON BLOCKING 
###################################################

run vector nb 1:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_nb --np=1,3,1 --res=17,17,17 --bc=1,1,4,1,1,1 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_114111_typeGreen=0.txt','validation_3d_CellCenter_114111_typeGreen=0.txt','validation_3d_CellCenter_114111_typeGreen=0.txt','validation_3d_CellCenter_114111_typeGreen=0.txt'))"
  

run vector nb 2:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/ 
    - mpirun -np 3 ./flups_validation_nb --np=1,3,1 --res=17,17,17 --bc=3,3,4,1,4,4 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_334144_typeGreen=0.txt','validation_3d_CellCenter_334144_typeGreen=0.txt','validation_3d_CellCenter_334144_typeGreen=0.txt','validation_3d_CellCenter_334144_typeGreen=0.txt'))"
  

run vector nb 3:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_nb --np=1,3,1 --res=17,17,17 --bcv=4,4,1,4,0,0,4,4,0,4,1,1,4,4,1,4,1,1 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_441400_typeGreen=0.txt','validation_3d_CellCenter_441400_typeGreen=0.txt','validation_3d_CellCenter_440411_typeGreen=0.txt','validation_3d_CellCenter_441411_typeGreen=0.txt'))"
  
run vector nb 4:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_nb --np=1,3,1 --res=17,17,17 --bcv=3,3,1,4,0,0,3,3,0,4,0,0,3,3,1,4,1,1 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_331400_typeGreen=0.txt','validation_3d_CellCenter_331400_typeGreen=0.txt','validation_3d_CellCenter_330400_typeGreen=0.txt','validation_3d_CellCenter_331411_typeGreen=0.txt'))"


run vector nb 5:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil vortex_rot]
  dependencies: 
    - compil vortex_rot
  script:
    - cd ./samples/solve_vtube
    - python3.8 ./scripts/test_rot_nb.py

###################################################
#  NON BLOCKING - MPI_Datatype
###################################################

run vector isr 1:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_isr --np=1,3,1 --res=17,17,17 --bc=1,1,4,1,1,1 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_114111_typeGreen=0.txt','validation_3d_CellCenter_114111_typeGreen=0.txt','validation_3d_CellCenter_114111_typeGreen=0.txt','validation_3d_CellCenter_114111_typeGreen=0.txt'))"
  

run vector isr 2:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/ 
    - mpirun -np 3 ./flups_validation_isr --np=1,3,1 --res=17,17,17 --bc=3,3,4,1,4,4 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_334144_typeGreen=0.txt','validation_3d_CellCenter_334144_typeGreen=0.txt','validation_3d_CellCenter_334144_typeGreen=0.txt','validation_3d_CellCenter_334144_typeGreen=0.txt'))"
  

run vector isr 3:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_isr --np=1,3,1 --res=17,17,17 --bcv=4,4,1,4,0,0,4,4,0,4,1,1,4,4,1,4,1,1 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_441400_typeGreen=0.txt','validation_3d_CellCenter_441400_typeGreen=0.txt','validation_3d_CellCenter_440411_typeGreen=0.txt','validation_3d_CellCenter_441411_typeGreen=0.txt'))"
  
run vector isr 4:1:
  stage: vector
  rules:
    - if: ($VECTOR_MERGE_REQUEST == "yes") && ($CI_OPEN_MERGE_REQUESTS)
    - if: ($VECTOR_PUSH_MAIN == "yes") && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
    - if: ($VECTOR_FAILEDJOB == "yes") && ($CI_COMMIT_BRANCH =~ /^[0-9]-job-failed.*$/i)
    - if: ($VECTOR_BRANCH == "yes") && $CI_COMMIT_BRANCH
  needs: [compil dbg]
  dependencies: 
    - compil dbg
  script:
    - cd ./samples/validation/
    - mpirun -np 3 ./flups_validation_isr --np=1,3,1 --res=17,17,17 --bcv=3,3,1,4,0,0,3,3,0,4,0,0,3,3,1,4,1,1 --lda=3
    - python3.8 -c "from scripts import check_res_3d; exit(check_res_3d.check_res_3d(1,'validation_3d_CellCenter_331400_typeGreen=0.txt','validation_3d_CellCenter_331400_typeGreen=0.txt','validation_3d_CellCenter_330400_typeGreen=0.txt','validation_3d_CellCenter_331411_typeGreen=0.txt'))"



